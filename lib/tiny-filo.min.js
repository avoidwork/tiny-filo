/**
 * Tiny FILO cache for Client or Server
 *
 * @author Jason Mulligan <jason.mulligan@avoidwork.com>
 * @copyright 2019
 * @license BSD-3-Clause
 * @version 1.2.0
 */(function(a){function b(a=1e3,b=0){return new c(a,b)}// Node, AMD & window supported
class c{constructor(a=0,b=0){this.first=null,this.items={},this.last=null,this.max=a,this.size=0,this.ttl=b}has(a){return a in this.items}clear(){return this.first=null,this.items={},this.last=null,this.size=0,this}delete(a){if(this.has(a)){const b=this.items[a];delete this.items[a],this.size--,null!==b.prev&&(b.prev.next=b.next),null!==b.next&&(b.next.prev=b.prev),this.first===b&&(this.first=b.next),this.last===b&&(this.last=b.prev)}return this}evict(){const a=this.last;return delete this.items[a.key],this.last=a.prev,this.last.next=null,this.size--,this}get(a){let b;if(this.has(a)){const c=this.items[a];0<this.ttl&&c.expiry<=new Date().getTime()?this.delete(a):b=c.value}return b}keys(){return Object.keys(this.items)}set(a,b){if(this.has(a)){const c=this.items[a];c.value=b}else{0<this.max&&this.size===this.max&&this.evict();const c=this.items[a]={expiry:0<this.ttl?new Date().getTime()+this.ttl:this.ttl,key:a,prev:this.last,next:null,value:b};1==++this.size?(this.first=c,this.last=c):(this.last.next=c,this.last=c)}return this}}"undefined"==typeof exports?"function"==typeof define&&void 0!==define.amd?define(()=>b):a.filo=b:module.exports=b})("undefined"==typeof window?global:window);
//# sourceMappingURL=tiny-filo.min.js.map